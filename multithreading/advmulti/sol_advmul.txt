import java.util.concurrent.*;
class myapp implements Runnable{
    public void run(){
        perform();
    }
     synchronized static void perform(){
        for(char aph = 'A';aph <= 'J';aph++){
            System.out.println(aph +"\t"+ Thread.currentThread());
            try{

            }
            catch(Exception e){
                e.fillInStackTrace();
            }
    }
}
}

public class example {

    public static void main (String[] args){
        ExecutorService exec = Executors.newCachedThreadPool();
        for(int i = 0;i<3;i++){
            exec.execute(new myapp());
        }

        exec.shutdown();
        System.out.println("done");
    }
}
//////////////////////////////////////////////////////////////////////////////////////
import java.util.concurrent.*;
class myapp implements Runnable{
    synchronized public void run(){
        perform();
    }
    void perform(){
        for(int i = 0;i < 11;i++){
            if(i==5){
            try{
                    wait(100);
            }
            catch(InterruptedException ie){
                ie.fillInStackTrace();
            }
        }
        System.out.println(i);
        notifyAll();
    }
  }
}

public class example {
    public static void main (String[] args){
        ExecutorService exec = Executors.newCachedThreadPool();
        for(int i = 0;i<3;i++){
            exec.execute(new myapp());
        }
        exec.shutdown();
        System.out.println("done");
    }
}
////////////////////////////////////////////////////////////////////////////
